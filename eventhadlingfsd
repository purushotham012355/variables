Click event (onClick):
function App(){
  const handleClick=()=>{
    alert("Button Clicked")
  };
  return (
    <button onClick={handleClick}>Click Me </button>
  )
}
export default App;


import React,{useState} from "react";
function App(){
  const [text,setText]=useState("")

  const handleChange=(event)=>{
    setText(event.target.value)
  }
  return(
    <div>
      <input type="text" value={text} onChange={handleChange} />
      <p>Your text: {text}</p>
    </div>
  )
}
export default App;


import React, { useState } from 'react';
import './App.css';

function App() {
  const [isHovered, setIsHovered] = useState(false);

  const handleMouseEnter = () => {
    setIsHovered(true);
  }

  const handleMouseLeave = () => {
    setIsHovered(false);
  }

  return (
    <div>
      <button
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        style={{
          backgroundColor: isHovered ? 'red' : 'blue',
          color: isHovered ? 'white' : 'black'
        }}
      >Hover Me</button>
      {isHovered && <p>Mouse is over the button</p>}
    </div>
  );
}

export default App;



import React,{ useState } from "react";
import "./App.css"
function App(){

  const[key, setKey]=useState("");

  const handleKeyDown=(event)=>{
    setKey(event.key);
  }

  return(
    <div className="App">
      <h1>Welcome to Keyboard!</h1>
      {key && <h2>Pressed key : {key}</h2>}
      <input type="text" onKeyDown={handleKeyDown} placeholder="Press any key"/>
    </div>
    )
}

export default App;

